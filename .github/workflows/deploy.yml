name: Deploy

on:
  push:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: The environment to deploy to.

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
              npm ci
              npm run lint
  
  test:
    runs-on: ubuntu-latest
    environment: development
    env:
      DOCKER_REPO: ${{ secrets.DEPLOY_DOCKER_REPOSITORY }}
      DOCKER_COMPOSE_CMD: "docker compose --progress plain"
    steps:
      - uses: actions/checkout@v4

      - id: install-awscli
        run: |
          curl --silent "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          sudo ./aws/install --update
          sudo apt-get -qq update
          sudo apt-get -qq install -y rsync

      - id: install-node-dependencies
        run: |
          npm ci
          npx playwright install --with-deps

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.DEPLOY_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEPLOY_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - uses: aws-actions/amazon-ecr-login@v1

      - id: run-with-docker-compose
        run: {{ env.DOCKER_COMPOSE_CMD }} -f docker-compose-real-backend.yml up -d

      - id: docker-compose-ps
        run: |
          sleep 30
          {{ env.DOCKER_COMPOSE_CMD }} -f docker-compose-real-backend.yml ps
          curl -v http://localhost:8085/

      - id: run-acceptance-tests
        run: npm run test:acceptance:ci
      
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - id: docker-compose-logs
        if: always()
        run: |
          {{ env.DOCKER_COMPOSE_CMD }} -f docker-compose-real-backend.yml logs --tail frontend
          {{ env.DOCKER_COMPOSE_CMD }} -f docker-compose-real-backend.yml logs --tail request-api


      - id: stop-containers
        if: always()
        run: {{ env.DOCKER_COMPOSE_CMD }} -f docker-compose-real-backend.yml down

  detect-environments:
    runs-on: ubuntu-latest
    needs: [test, lint]
    outputs:
      environments: ${{ steps.environments.outputs.result }}
    if: github.ref_name == 'main'
    steps:
      - uses: actions/github-script@v6
        id: environments
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: json
          script: |
            if (context.payload?.inputs?.environment) return [context.payload?.inputs?.environment];
            const {data: {environments}} = 
              await github.request(`GET /repos/${process.env.GITHUB_REPOSITORY}/environments`);
            return environments.map(e => e.name)
 
