name: Deploy

on:
  push:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: The environment to deploy to.

jobs:  
  test:
    runs-on: ubuntu-latest
    environment: development
    env:
      DOCKER_REPO: ${{ secrets.DEPLOY_DOCKER_REPOSITORY }}
    steps:
      - uses: actions/checkout@v4
      - name: Install AWS CLI
        uses: ./.github/actions/awscli-setup
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      - id: install-node-dependencies
        name: Install node dependencies
        run: npm ci
      - id: lint
        name: Lint
        run: npm run lint
      - uses: ./.github/actions/playwright-setup

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.DEPLOY_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEPLOY_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - uses: aws-actions/amazon-ecr-login@v2

      - id: run-with-docker-compose
        run: docker compose --progress plain -f docker-compose-real-backend.yml up -d

      - id: docker-compose-ps
        name: Check docker compose output
        run: |
          sleep 30
          docker compose --progress plain -f docker-compose-real-backend.yml ps
          curl -v http://localhost:8085/

      - id: run-acceptance-tests
        run: npm run test:acceptance:ci
      
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - id: docker-compose-logs
        if: always()
        run: |
          docker compose --progress plain -f docker-compose-real-backend.yml logs --tail frontend
          docker compose --progress plain -f docker-compose-real-backend.yml logs --tail request-api

      - id: stop-containers
        if: always()
        run: docker compose --progress plain -f docker-compose-real-backend.yml down

  detect-environments:
    runs-on: ubuntu-latest
    needs: [test]
    outputs:
      environments: ${{ steps.environments.outputs.result }}
    if: github.ref_name == 'main'
    steps:
      - uses: actions/github-script@v6
        id: environments
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: json
          script: |
            if (context.payload?.inputs?.environment) return [context.payload?.inputs?.environment];
            const {data: {environments}} = 
              await github.request(`GET /repos/${process.env.GITHUB_REPOSITORY}/environments`);
            return environments.map(e => e.name)
 
